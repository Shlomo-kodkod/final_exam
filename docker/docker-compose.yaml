
services:
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - data-network
    restart: unless-stopped

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_NODE_ID=1 
      - KAFKA_PROCESS_ROLES=broker,controller 
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER 
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT 
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093 
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0 
      - KAFKA_NUM_PARTITIONS=3 
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true 
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - "9092:9092"
    networks:
      - data-network
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - data-network
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:9.1.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  
    ports:
      - "5601:5601" 
    depends_on:
      - elasticsearch 
    networks:
      - data-network
    restart: unless-stopped

  retriever:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.retriver
    container_name: retriever
    environment:
      - BOOTSTRAP_SERVER=kafka:9092
      - KAFKA_META_TOPIC=metadata
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_INDEX=podcast_metadata
      - ES_LOG_INDEX=logger
    depends_on:
      - mongodb
      - kafka
      - elasticsearch
      - kibana
    networks:
      - data-network
    restart: unless-stopped

  persister:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.persister
    container_name: persister
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_INITDB_DATABASE=podcast
      - MONGO_COLLECTION=podcast
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_INDEX=podcast_metadata
      - ES_LOG_INDEX=logger
      - BOOTSTRAP_SERVER=kafka:9092
      - KAFKA_META_TOPIC=metadata
      - KAFKA_META_KEY=metaretriever
      - KAFKA_META_GROUP_ID=metapersister
      - KAFKA_AUDIO_TOPIC=audio
      - KAFKA_AUDIO_KEY=audioretriever
    depends_on:
      - mongodb
      - kafka
      - elasticsearch
      - kibana
      - retriever
    networks:
      - data-network
    restart: unless-stopped
  tts:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.tts
    container_name: tts
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_INITDB_DATABASE=podcast
      - MONGO_COLLECTION=podcast
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_INDEX=podcast_metadata
      - ES_LOG_INDEX=logger
      - BOOTSTRAP_SERVER=kafka:9092
      - KAFKA_AUDIO_TOPIC=audio
      - KAFKA_AUDIO_KEY=audioretriever
      - KAFKA_AUDIO_GROUP_ID=audiopersister
      - KAFKA_ENRICHER_TOPIC=enricher
      - KAFKA_ENRICHER_KEY=enricher
    depends_on:
      - mongodb
      - kafka
      - elasticsearch
      - kibana
      - retriever
      - persister
    networks:
      - data-network
    restart: unless-stopped

  enricher_service:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.enricher
    container_name: enricher
    environment:
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_INDEX=podcast_metadata
      - ES_LOG_INDEX=logger
      - BOOTSTRAP_SERVER=kafka:9092
      - KAFKA_ENRICHER_TOPIC=enricher
      - KAFKA_ENRICHER_KEY=enricher
      - KAFKA_ENRICHER_GROUP_ID=enricher
    depends_on:
      - mongodb
      - kafka
      - elasticsearch
      - kibana
      - retriever
      - persister
      - tts
    networks:
      - data-network
    restart: unless-stopped

  

networks:
  data-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  kafka_data:
    driver: local
  es_data:
    driver: local
